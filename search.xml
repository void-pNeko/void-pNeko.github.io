<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CMU 15-213 Lab 0 总结</title>
      <link href="/2022/03/11/cmu-15-213-lab-0-zong-jie/"/>
      <url>/2022/03/11/cmu-15-213-lab-0-zong-jie/</url>
      
        <content type="html"><![CDATA[<p>几个点没搞清楚所以做了一个下午</p><ol><li><p>像下面这样的结构体：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> list_ele <span class="token punctuation">{</span> <span class="token keyword">char</span> <span class="token operator">*</span>value<span class="token punctuation">;</span> <span class="token keyword">struct</span> list_ele <span class="token operator">*</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span> list_ele_t<span class="token punctuation">;</span></code></pre><p>用<code>list_ele_t* q = (list_ele_t*)malloc(sizeof(list_ele_t))</code>分配内存之后，里面的指针，如<code>next</code>，是野指针，它不为NULL，指向了一块未经允许访问的内存区域。<strong>必须手动初始化为NULL。</strong></p></li><li><p>对于 <code>char*</code> 的 <code>sizeof</code> 操作，所得值会始终为 <code>8</code> ，它表示是指针的大小，在我的 64 位机子上是 8 个字节；而非表示字符串的大小（最开始是用了<code>sizeof</code>，耽误了很久）。由于本次 Lab 的输入只有英文字符， <strong>可以直接将串的字符数量作为它所需内存的字节数量</strong>。也就是说，当要给一个 <code>char*</code> 分配内存时，应该：</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//假设要把字符串b（已分配内存）复制给s（未分配内存）</span><span class="token keyword">char</span><span class="token operator">*</span> b<span class="token punctuation">;</span><span class="token keyword">char</span><span class="token operator">*</span> s<span class="token punctuation">;</span>s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//strlen返回字符串中字符数量，不包括'\0'。所以要+1给终止符`\0`留位置。</span><span class="token function">strcpy</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>指针操作比较迷糊，比如 <code>reverse</code> 就一开始没写对，画了画图才理清楚逻辑；<code>insert_head</code> 和 <code>insert_tail</code> 都要特别关注插入元素为队列中第一个元素的情况，此时要注意更新 <code>q-&gt;head</code> 和 <code>q-&gt;tail</code> 两个指针。</p></li><li><p>最后一个坑点，<code>remove_head</code> 还要求一个拷贝操作，是需要将传入的字符串清空了再拷贝……</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Core Java, Volume Ⅰ Notes</title>
      <link href="/2022/03/06/core-java-volume-i-notes/"/>
      <url>/2022/03/06/core-java-volume-i-notes/</url>
      
        <content type="html"><![CDATA[<h1 id="Chapter-3"><a href="#Chapter-3" class="headerlink" title="Chapter 3"></a>Chapter 3</h1><h2 id="3-1-A-Simple-Java-Program"><a href="#3-1-A-Simple-Java-Program" class="headerlink" title="3.1 A Simple Java Program"></a>3.1 A Simple Java Program</h2><ul><li>Java is case sensitive<pre class=" language-Java"><code class="language-Java">public class FirstSample{  //public: aaccess modifier  //everything in a Java program must be inside a class  //must make the file name for this source code the same as the name of the **public** class  public static void main(String[] args){      // program starts with the code in this main method      // and the main method must be declared **public**      System.out.println("Hello, World!");      // using the `System.out` object and calling its `println` method      // `System.out.print` will print without a newline  }}</code></pre></li><li><code>void main</code>  means that this method will not return an exit code. Use the <code>System.exit</code> method when needed.</li><li>Java uses double quotes to delimit strings like C/C++</li></ul><h2 id="3-2-Comments"><a href="#3-2-Comments" class="headerlink" title="3.2 Comments"></a>3.2 Comments</h2><ul><li>There are a kind of comments used to generate documentation automatically. Like this:<pre class=" language-Java"><code class="language-Java">/*** The first program* @author StreamAzure*/</code></pre></li></ul><h2 id="3-3-Data-Types"><a href="#3-3-Data-Types" class="headerlink" title="3.3 Data Types"></a>3.3 Data Types</h2><h3 id="8-primitive-types"><a href="#8-primitive-types" class="headerlink" title="8 primitive types"></a>8 primitive types</h3><table><thead><tr><th>Type</th><th>Storage Requirement</th><th>Range</th></tr></thead><tbody><tr><td>int</td><td>4 bytes</td><td>$-2^{31}$ to $2^{31}-1$</td></tr><tr><td>short</td><td>2 bytes</td><td></td></tr><tr><td>long</td><td>8 bytes</td><td></td></tr><tr><td>byte</td><td>1 byte</td><td>$-128$ to $127$</td></tr><tr><td>float</td><td>4 bytes</td><td></td></tr><tr><td>double</td><td>8 bytes</td><td></td></tr><tr><td>char</td><td></td><td></td></tr><tr><td>boolean</td><td></td><td></td></tr></tbody></table><p>You cannot convert between integers and <code>boolean</code> values. Also, an integer expression <code>x = 0</code> will not be converted to a  <code>boolean</code> value.</p><h3 id="suffix-and-prefix"><a href="#suffix-and-prefix" class="headerlink" title="suffix and prefix"></a>suffix and prefix</h3><table><thead><tr><th>suffix/prefix</th><th>meaning</th><th>example</th></tr></thead><tbody><tr><td>L or l</td><td>long integer</td><td><code>4000000000L</code></td></tr><tr><td>0x</td><td>Hexadecimal</td><td><code>0xCAFE</code></td></tr><tr><td>0</td><td>Octal</td><td><code>010</code> (8)</td></tr><tr><td>0b</td><td>binary</td><td><code>0b1001</code> (9)</td></tr><tr><td>F or f</td><td>float</td><td><code>3.14F</code></td></tr><tr><td>E or e</td><td>a decimal exponent</td><td><code>1.729E3</code> (1729)</td></tr></tbody></table><p>Floating-point numbers without an <code>F</code> suffix will be considered to be of type <code>double</code>.</p><h2 id="3-4-Variables-and-Constants"><a href="#3-4-Variables-and-Constants" class="headerlink" title="3.4 Variables and Constants"></a>3.4 Variables and Constants</h2><h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><p>A variable must be declared and then be initialized.<br>You can do this:</p><pre class=" language-Java"><code class="language-Java">int days = 12; //both declare and initialize</code></pre><p>But with Java 10, it can be:</p><pre class=" language-Java"><code class="language-Java">var days = 12; //initialize the local variable without declare its type</code></pre><p>Unlike C/C++, Java  does not distinguish between declarations and definitions.</p><h3 id="Constants"><a href="#Constants" class="headerlink" title="Constants"></a>Constants</h3><p>The keyword <code>final</code> denotes a constant.</p><pre class=" language-Java"><code class="language-Java">final double PI = 3.14;</code></pre><p>Set up a class constant, so that it can be available to multiple methods inside a single class.</p><pre class=" language-Java"><code class="language-Java">public class Constants{    public static final double PI = 3.14;    public static void main(String[] args){        ...    }}</code></pre><p>Since it is declared with <code>public</code>, methods of other classes can also use it, like <code>Constants.PI</code><br>Besides, <code>const</code> is a reserved keyword but not currently used.</p><h3 id="Enumerated"><a href="#Enumerated" class="headerlink" title="Enumerated"></a>Enumerated</h3><p>Define you own enumerated type:</p><pre class=" language-Java"><code class="language-Java">enum Size {SMALL, MEDIUM, LARGE, EXTRA_LARGE};</code></pre><p>Declare variables of this type:</p><pre><code>Size s = Size.MEDIUM;</code></pre><h2 id="3-5-Operators"><a href="#3-5-Operators" class="headerlink" title="3.5 Operators"></a>3.5 Operators</h2><p><strong>Integer division by 0</strong> raises an <strong>exception,</strong> whereas <strong>floating-point division by 0</strong> causes an <strong>infinite</strong> or <strong>NaN</strong> result.<br>Some mathematical functions and constants:</p><pre class=" language-Java"><code class="language-Java">double y = Math.sqrt(x);double y = Math.pow(x, a);Math.PIMath.E</code></pre><p>With importting the Math package, you can avoid the <code>Math</code> prefix:</p><pre class=" language-Java"><code class="language-Java">import static java.lang.Math.*;</code></pre><p><strong>Conversions between Numeric Types</strong><br><img src="980D243FFE7EA25F6D7087DB2D7DD3DC.png" alt><br>Dotted arrows means the conversions may lose precision while solid arrows means not.<br>When two values are combined with a binary operator, the conversion priority will be: <code>double</code> → <code>float</code> → <code>long</code> →<code>int</code></p><p><strong>Casts</strong><br>The conversions in which loss of information can be done by casts.<br>For example:</p><pre class=" language-Java"><code class="language-Java">double x = 9.997;int nx = (int) Math.round(x);// nx = 10.</code></pre><p><strong>Switch Expressions</strong><br>When you need to choose among more than two values, use the <code>switch</code> expression (Java 14).</p><pre class=" language-Java"><code class="language-Java">String seasonName = switch (seasonCode){    case 0 -> "Spring";    case 1 -> "Summer";    case 2 -> "Fall";    case 3 -> "Winter";    default -> "???";};</code></pre><h2 id="3-6-Strings"><a href="#3-6-Strings" class="headerlink" title="3.6 Strings"></a>3.6 Strings</h2><p><strong>Substrings</strong></p><pre class=" language-Java"><code class="language-Java">String greeting = "hello";String s = greeting.substring(0, 3);// s = "hel"</code></pre><p><strong>Every Java object can be converted to  a string.</strong></p><pre class=" language-Java"><code class="language-Java">int age = 13;String rating = "PG" + age;// rating = "PG13"</code></pre><p>Use the <code>join</code> method when you put multiple strings together with separations among them:</p><pre class=" language-Java"><code class="language-Java">String all = String.join("/","S","M","L","XL");// the first parameter is the separation// all = "S/M/L/XL"</code></pre><p><strong>String Are Immutable</strong><br>For example, turn <code>hello</code> into <code>help</code>:</p><pre class=" language-Java"><code class="language-Java">String greeting = "hello";greeting = greeting.substring(0, 3) + "p";// greeting = "help"</code></pre><p>You can not change the individual characters in a Java string. It can be roughly considered as a <code>char*</code> pointer in C.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 总结</title>
      <link href="/2022/03/06/leetcode-zong-jie/"/>
      <url>/2022/03/06/leetcode-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="常用库函数"><a href="#常用库函数" class="headerlink" title="常用库函数"></a>常用库函数</h1><ul><li><code>int</code> / <code>double</code> / <code>long</code> / <code>float</code>转 <code>string</code>：<code>std:to_string(a)</code>（C++11）</li></ul><h1 id="常见解法"><a href="#常见解法" class="headerlink" title="常见解法"></a>常见解法</h1><ul><li>数组以下标<code>k</code>为界前后段对调：整体翻转，<code>k</code>前后两段再翻转</li></ul><h1 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h1><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p><a href="https://leetcode-cn.com/problems/append-k-integers-with-minimal-sum/" target="_blank" rel="noopener">6017. 向数组中追加 K 个整数</a><br>给你一个整数数组 nums 和一个整数 k 。请你向 nums 中追加 k 个 <strong>未</strong> 出现在 nums 中的、互不相同 的 <strong>正</strong> 整数，并使结果数组的元素和 最小 。<br>返回追加到 nums 中的 k 个整数之和。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
